{
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Bash(awk:*)",
      "Bash(bash:*)",
      "Bash(cat:*)",
      "Bash(chmod:*)",
      "Bash(claude config --help)",
      "Bash(claude config hooks:*)",
      "Bash(claude config list --global)",
      "Bash(claude hooks:*)",
      "Bash(claude mcp:*)",
      "Bash(cp:*)",
      "Bash(curl:*)",
      "Bash(deno bundle:*)",
      "Bash(deno cache:*)",
      "Bash(deno check:*)",
      "Bash(deno compile:*)",
      "Bash(deno doc:*)",
      "Bash(deno eval:*)",
      "Bash(deno fmt:*)",
      "Bash(deno info:*)",
      "Bash(deno install:*)",
      "Bash(deno lint:*)",
      "Bash(deno publish:*)",
      "Bash(deno run:*)",
      "Bash(deno task:*)",
      "Bash(deno test:*)",
      "Bash(diff:*)",
      "Bash(docker:*)",
      "Bash(echo:*)",
      "Bash(find:*)",
      "Bash(gh api:*)",
      "Bash(gh issue comment:*)",
      "Bash(gh issue create:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue view:*)",
      "Bash(gh pr checkout:*)",
      "Bash(gh pr comment:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr merge:*)",
      "Bash(gh pr view:*)",
      "Bash(gh release create:*)",
      "Bash(gh release edit:*)",
      "Bash(gh release list:*)",
      "Bash(gh release view:*)",
      "Bash(gh repo view:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh run watch:*)",
      "Bash(gh workflow list:*)",
      "Bash(gh workflow run:*)",
      "Bash(gh workflow view:*)",
      "Bash(git add:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(git push:*)",
      "Bash(git restore:*)",
      "Bash(git stash:*)",
      "Bash(git tag:*)",
      "Bash(grep:*)",
      "Bash(head:*)",
      "Bash(jq:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(npm:*)",
      "Bash(pip:*)",
      "Bash(ps:*)",
      "Bash(pwd:*)",
      "Bash(python3:*)",
      "Bash(python:*)",
      "Bash(realpath:*)",
      "Bash(rg:*)",
      "Bash(sed:*)",
      "Bash(sort:*)",
      "Bash(tail:*)",
      "Bash(touch:*)",
      "Bash(tr:*)",
      "Bash(tree:*)",
      "Bash(uniq:*)",
      "Bash(wc:*)",
      "Bash(where:*)",
      "Bash(which:*)",
      "Bash(xargs:*)",
      "Bash(yarn:*)",
      "WebFetch(domain:*.github.io)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:docs.deno.com)",
      "WebFetch(domain:developer.mozilla.org)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:jsr.io)",
      "WebFetch(domain:modelcontextprotocol.io)",
      "WebFetch(domain:www.contributor-covenant.org)",
      "mcp__aichaku-reviewer__get_standards",
      "mcp__aichaku-reviewer__review_file",
      "mcp__aichaku-reviewer__review_methodology",
      "mcp__github-operations__run_list",
      "mcp__github-operations__run_view",
      "mcp__github-operations__run_watch",
      "mcp__test-formatting__test_ansi",
      "mcp__test-formatting__test_json",
      "mcp__test-formatting__test_markdown",
      "mcp__test-formatting__test_plain",
      "mcp__test-formatting__test_structured",
      "mcp__test-formatting__test_unicode"
    ],
    "deny": [
      "Bash(rm -rf:*)",
      "Bash(sudo:*)",
      "Bash(killall:*)"
    ]
  },
  "hooks": {
    "PreCompact": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "deno run --allow-read --allow-write --allow-env --allow-run ~/.claude/aichaku/hooks/aichaku-hooks.ts conversation-summary"
          }
        ]
      },
      {
        "hooks": [
          {
            "type": "command",
            "command": "deno run --allow-read --allow-write --allow-env ~/.claude/aichaku/hooks/aichaku-hooks.ts conversation-summary-precompact"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "deno run --allow-read --allow-write --allow-env ~/.claude/aichaku/hooks/aichaku-hooks.ts path-validator"
          }
        ]
      },
      {
        "matcher": "Bash(git commit:*)",
        "hooks": [
          {
            "type": "command",
            "command": "deno run --allow-read --allow-write --allow-env ~/.claude/aichaku/hooks/aichaku-hooks.ts commit-validator"
          }
        ]
      }
    ]
  },
  "model": "sonnet"
}
