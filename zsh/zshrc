#
# .zshrc Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#
# This file is sourced by interactive shells. It should define aliases,
# functions, shell options, and key bindings.
#
# The configuration files are read in the following order:
#
# /etc/zshenv
#~/.zshenv
#/etc/zprofile
#~/.zprofile
#/etc/zshrc
#~/.zshrc
#~/.zpreztorc
#/etc/zlogin
#~/.zlogin
#~/.zlogout
#/etc/zlogout


# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# BREW RECOMMENDED
fpath=(/usr/local/share/zsh-completions $fpath)

# Zsh
# Show functions
function lsfunc () {
    print -l ${(ok)functions}
}

# TOO MANY OPEN FILES ERROR
# sudo nano /etc/sysctl.conf
#   kern.maxfiles=24576
#   kern.maxfilesperproc=20480
ulimit -n 16384

# Help
# unalias run-help
autoload run-help
HELPDIR=/usr/local/share/zsh/help

# Recommended on http://nuclearsquid.com/writings/git-tricks-tips-workflows/
# Handled in init by prezto
# autoload -U compinit && compinit

# iTerm2 shell
# test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# AWS

source /usr/local/share/zsh/site-functions/_aws

# functions to manually backup PROdb or dbflex

function tdbackup-esolia {
    cd /Users/rcogley/Google\ Drive/\!Backups/PROdb/15331
    /usr/local/bin/mono tdbackup.exe
}

function tdbackup-cookjp {
      cd /Users/rcogley/Google\ Drive/\!Backups/PROdb/15361
    /usr/local/bin/mono tdbackup.exe
}

function tdbackup-cookap {
      cd /Users/rcogley/Google\ Drive/\!Backups/PROdb/25822
    /usr/local/bin/mono tdbackup.exe
}

function tdbackup-jrc {
      cd /Users/rcogley/Google\ Drive/\!Backups/PROdb/26644
    /usr/local/bin/mono tdbackup.exe
}

# function to deploy vector

function vectordeploy {
    cd /Users/rcogley/dev/riot/
    chmod -R 755 /Users/rcogley/dev/riot/riot/
    /usr/local/bin/rsync -avz -L --delete --iconv=UTF-8-MAC,UTF-8 --exclude '.well-known' /Users/rcogley/dev/riot/riot/ rcogley@cogley.info:/home/rcogley/webapps/es_chat01
}

# function to deploy hugo, had --force and --progress on rsync, maybe Apple's is old?
function hugodeploy-rcc {
    cd /Users/rcogley/dev/RCC-Hugo2015
    :>| ~/dev/RCC-Hugo2015/data/postgitinfo.yaml && for f in ~/dev/RCC-Hugo2015/content/post/*.md; do echo "$(cat $f|grep slug|sed 's/slug: //'): $(git log --pretty="%h %s" -1 $f)" >> ~/dev/RCC-Hugo2015/data/postgitinfo.yaml; done
    rm -rf /tmp/rick.cogley.info
    # export RCCCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/RCC-Hugo2015/static/bundle/bundle.css)"
    # export TOPICSRCCCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/RCC-Hugo2015/static/css/topics.min.css)"
    # export PRISMRCCCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/RCC-Hugo2015/static/css/prism.min.css)"
    export PRISMRCCJS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/RCC-Hugo2015/static/js/prism.min.js)"
    export LIGHTRCCCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/RCC-Hugo2015/static/css/lightbox.min.css)"
    export LIGHTRCCJS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/RCC-Hugo2015/static/js/lightbox.min.js)"
    chmod -R 775 /Users/rcogley/dev/RCC-Hugo2015/static/
    hugo --config="/Users/rcogley/dev/RCC-Hugo2015/config.toml" -s /Users/rcogley/dev/RCC-Hugo2015/ -d /tmp/rick.cogley.info
    /usr/local/bin/rsync -avz --delete --iconv=UTF-8-MAC,UTF-8 --exclude '.well-known' /tmp/rick.cogley.info/ rcogley@cogley.info:/home/rcogley/webapps/rick_hugo01
}

function hugodeploy-esoliapro {
    cd /Users/rcogley/dev/eSolia.pro
    rm -rf /tmp/esolia.pro
    export STYLECSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia.pro/static/css/style.css)"
    export FEEDEKCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia.pro/static/css/FeedEk-2.0.min.css)"
    export FONTELLOCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia.pro/static/css/fontello.min.css)"
    export GHPMATCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia.pro/static/css/ghpages-materialize.min.css)"
    export MATCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia.pro/static/css/materialize.min.css)"
    export PRISMCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia.pro/static/css/prism.min.css)"
    export TYPOCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia.pro/static/css/typography.min.css)"
    export LATESTSHA="$(git rev-parse master)"
    chmod -R 775 /Users/rcogley/dev/eSolia.pro/static/
    hugo --config="/Users/rcogley/dev/eSolia.pro/config.toml" -s /Users/rcogley/dev/eSolia.pro/ -d /tmp/esolia.pro
    /usr/local/bin/rsync -avz --delete --iconv=UTF-8-MAC,UTF-8 --exclude '.well-known' /tmp/esolia.pro/ rcogley@cogley.info:/home/rcogley/webapps/es_hugo_esolia_pro_01
    curl -X POST "http://util-02.esolia.com/flowdock/v2/flowdock.php?action=chat&chat_name=Auto-Script&chat_content=%40team%20Copied+files+to+ESOLIA.PRO+site+via+rsync+including+commit+https%3A%2F%2Fgithub.com%2FeSolia%2FeSolia.pro%2Fcommit%2F$LATESTSHA&chat_tags=esolia.pro&flowdock_api=73d6f7%3Df83ad24ab6628fda5ca2b18fff349a5877a928O7o799"
}

function hugodeploy-esoliacom {
    cd /Users/rcogley/dev/eSolia
    rm -rf /tmp/esolia.com
    export STYLECSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia/static/css/style.css)"
    export FEEDEKCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia/static/css/FeedEk-2.0.min.css)"
    export FONTELLOCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia/static/css/fontello.min.css)"
    export GHPMATCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia/static/css/ghpages-materialize.min.css)"
    export MATCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia/static/css/materialize.min.css)"
    export PRISMCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia/static/css/prism.min.css)"
    export TYPOCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia/static/css/typography.min.css)"
    export LATESTSHA="$(git rev-parse master)"
    chmod -R 775 /Users/rcogley/dev/eSolia/static/
    hugo --config="/Users/rcogley/dev/eSolia/config_en.toml" -s /Users/rcogley/dev/eSolia/ -d /tmp/esolia.com
    /usr/local/bin/rsync -avz --delete --iconv=UTF-8-MAC,UTF-8 --exclude '.well-known' /tmp/esolia.com/ rcogley@cogley.info:/home/rcogley/webapps/es_hugo_esolia_com_01
    curl -X POST "http://util-02.esolia.com/flowdock/v2/flowdock.php?action=chat&chat_name=Auto-Script&chat_content=%40team%20Copied+files+to+ESOLIA.COM+site+via+rsync+including+commit+https%3A%2F%2Fgithub.com%2FeSolia%2FeSolia%2Fcommit%2F$LATESTSHA&chat_tags=esolia.com&flowdock_api=73d6f7%3Df83ad24ab6628fda5ca2b18fff349a5877a928O7o799"
}

function hugodeploy-esoliacojp {
    cd /Users/rcogley/dev/eSolia
    rm -rf /tmp/esolia.co.jp
    export STYLECSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia/static/css/style.css)"
    export FEEDEKCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia/static/css/FeedEk-2.0.min.css)"
    export FONTELLOCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia/static/css/fontello.min.css)"
    export GHPMATCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia/static/css/ghpages-materialize.min.css)"
    export MATCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia/static/css/materialize.min.css)"
    export PRISMCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia/static/css/prism.min.css)"
    export TYPOCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia/static/css/typography.min.css)"
    export LATESTSHA="$(git rev-parse master)"
    chmod -R 775 /Users/rcogley/dev/eSolia/static/
    hugo --config="/Users/rcogley/dev/eSolia/config_ja.toml" -s /Users/rcogley/dev/eSolia/ -d /tmp/esolia.co.jp
    /usr/local/bin/rsync -avz --delete --iconv=UTF-8-MAC,UTF-8 --exclude '.well-known' /tmp/esolia.co.jp/ rcogley@cogley.info:/home/rcogley/webapps/es_hugo_esolia_co_jp_01
    curl -X POST "http://util-02.esolia.com/flowdock/v2/flowdock.php?action=chat&chat_name=Auto-Script&chat_content=%40team%20Copied+files+to+ESOLIA.CO.JP+site+via+rsync+including+commit+https%3A%2F%2Fgithub.com%2FeSolia%2FeSolia%2Fcommit%2F$LATESTSHA&chat_tags=esolia.co.jp&flowdock_api=73d6f7%3Df83ad24ab6628fda5ca2b18fff349a5877a928O7o799"
}

function XXhugodeploy-esolia {
    hugogetjson-esolia
    cd /Users/rcogley/dev/eSolia_2018/
    rm -rf /tmp/esolia.com
    rm -rf /tmp/esolia.co.jp
    rm -rf /tmp/esolia
    export MAINCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia_2018/static/css/main.min.css)"
    export MAINJS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia_2018/static/js/main.min.js)"
    export LATESTSHA="$(git rev-parse master)"
    chmod -R 775 /Users/rcogley/dev/eSolia_2018/static/
    hugo --gc --config="/Users/rcogley/dev/eSolia_2018/config.toml" -s /Users/rcogley/dev/eSolia_2018/ -d /tmp/esolia
    /usr/local/bin/rsync -avz --delete --iconv=UTF-8-MAC,UTF-8 --exclude '.well-known' /tmp/esolia/ja/ rcogley@cogley.info:/home/rcogley/webapps/es_hugo_esolia_co_jp_01
    /usr/local/bin/rsync -avz --delete --iconv=UTF-8-MAC,UTF-8 --exclude '.well-known' /tmp/esolia/en/ rcogley@cogley.info:/home/rcogley/webapps/es_hugo_esolia_com_01
    curl -X POST "http://util-02.esolia.com/flowdock/v2/flowdock.php?action=chat&chat_name=Auto-Script&chat_content=%40team%20Copied+files+to+ESOLIA+site+via+rsync+including+commit+https%3A%2F%2Fgithub.com%2FeSolia%2FeSolia%2Fcommit%2F$LATESTSHA&chat_tags=esoliawebsite&flowdock_api=73d6f7%3Df83ad24ab6628fda5ca2b18fff349a5877a928O7o799"
}

function hugodeploys3-esolia {
    hugogetjson-esolia
    cd /Users/rcogley/dev/eSolia_2018/
    rm -rf /tmp/esolia.com
    rm -rf /tmp/esolia.co.jp
    rm -rf /tmp/esolia
    export MAINCSS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia_2018/static/css/main.min.css)"
    export MAINJS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia_2018/static/js/main.min.js)"
    export BUCAJS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia_2018/static/js/bulma-carousel.min.js)"
    export BUSTJS_HASH="$(git log -1 --format='%h' /Users/rcogley/dev/eSolia_2018/static/js/bulma-steps.min.js)"
    export LATESTSHA="$(git rev-parse master)"
    chmod -R 775 /Users/rcogley/dev/eSolia_2018/static/
    hugo --gc --config="/Users/rcogley/dev/eSolia_2018/config.toml" -s /Users/rcogley/dev/eSolia_2018/ -d /tmp/esolia
    /Users/rcogley/gocode/bin/s3deploy -source=/tmp/esolia/en/ -region=us-east-1 -bucket=esolia.com-cdn
    /Users/rcogley/gocode/bin/s3deploy -source=/tmp/esolia/ja/ -region=us-east-1 -bucket=esolia.co.jp-cdn
    curl -X POST "http://util-02.esolia.com/flowdock/v2/flowdock.php?action=chat&chat_name=Auto-Script&chat_content=%40team%20Copied+files+to+ESOLIA+site+via+rsync+including+commit+https%3A%2F%2Fgithub.com%2FeSolia%2FeSolia%2Fcommit%2F$LATESTSHA&chat_tags=esoliawebsite&flowdock_api=73d6f7%3Df83ad24ab6628fda5ca2b18fff349a5877a928O7o799"
    /usr/local/bin/aws cloudfront create-invalidation --distribution-id E276HZ5CIRLAB3 --paths "/index.html" "/" "/page/*" "/post/*" "/sitemap/*" "/404/*" "/tags/*" "/topics/*"
    /usr/local/bin/aws cloudfront create-invalidation --distribution-id E1PV56T4OOCLME --paths "/index.html" "/" "/page/*" "/post/*" "/sitemap/*" "/404/*" "/tags/*" "/topics/*"
    echo "Done. Use s3deploy -force to force re-upload if needed."
}

function aws-cfclear-esoliacom {
   echo "Invalidating aws cloudfront objects for esolia.com before expiration"
   aws cloudfront create-invalidation --distribution-id E276HZ5CIRLAB3 --paths "/*"
}
function aws-cfclear-esoliacojp {
   echo "Invalidating aws cloudfront objects for esolia.co.jp before expiration"
   aws cloudfront create-invalidation --distribution-id E1PV56T4OOCLME --paths "/*"
}
function aws-cfclear {
   echo "Invalidating aws cloudfront objects for esolia sites for specific path:"
   echo $1
   aws cloudfront create-invalidation --distribution-id E276HZ5CIRLAB3 --paths "/$1/*"
   aws cloudfront create-invalidation --distribution-id E1PV56T4OOCLME --paths "/$1/*"
}


function hugodeploy-RCClive {
    cd /Users/rcogley/dev/RCC-live/
    rm -rf /tmp/live.cogley.info
    rm -rf /tmp/tilde.town.rickcogley
    rm -rf /tmp/ctrl-c.club.rickcogley
    chmod -R 775 /Users/rcogley/dev/RCC-live/static/
    echo "Generating live.cogley.info"
    hugo --config="/Users/rcogley/dev/RCC-live/config.toml" --baseURL="http://live.cogley.info" -s /Users/rcogley/dev/RCC-live/ -d /tmp/live.cogley.info
    echo "Syncing live.cogley.info"
    /usr/local/bin/rsync -avz --delete --iconv=UTF-8-MAC,UTF-8 --exclude '.well-known' /tmp/live.cogley.info/ rcogley@cogley.info:/home/rcogley/webapps/rick_live01
    echo "Generating tilde.town"
    hugo --config="/Users/rcogley/dev/RCC-live/config.toml" --baseURL="http://tilde.town/~rickcogley" -s /Users/rcogley/dev/RCC-live/ -d /tmp/tilde.town.rickcogley
    echo "Syncing tilde.town"
    /usr/local/bin/rsync -avz --delete --iconv=UTF-8-MAC,UTF-8 --exclude '.well-known' /tmp/tilde.town.rickcogley/ rickcogley@tilde.town:/home/rickcogley/public_html
    echo "Generating ctrl-c.club"
    hugo --config="/Users/rcogley/dev/RCC-live/config.toml" --baseURL="http://ctrl-c.club/~rickcogley" -s /Users/rcogley/dev/RCC-live/ -d /tmp/ctrl-c.club.rickcogley
    echo "Syncing ctrl-c.club"
    /usr/local/bin/rsync -avz --delete --iconv=UTF-8-MAC,UTF-8 --exclude '.well-known' /tmp/ctrl-c.club.rickcogley/ rickcogley@ctrl-c.club:/home/rickcogley/public_html
}

function hugodeploy-jpvad {
    _hugobin="$HOME/gocode/bin/hugo"
    _rsyncbin="/usr/local/bin/rsync"
    _sshlogin="pvad@j-pvad.jp"
    _srvtargetdir="/home/pvad/webapps/jpvad_jp"
    _workingdir="/Users/rcogley/dev/abmd-j-pvad"
    # Trailing Slash Required
    _tmpdir="/tmp/j-pvad.jp/"
    cd ${_workingdir}
    rm -rf ${_tmpdir}
    chmod -R 775 ${_workingdir}/static/
    ${_hugobin} --config="${_workingdir}/config.toml" -s ${_workingdir} -d ${_tmpdir}
    ${_rsyncbin} -avz --delete --iconv=UTF-8-MAC,UTF-8 --exclude '.well-known' ${_tmpdir} ${_sshlogin}:${_srvtargetdir}
}

function hugodeploy-dev-jpvad {
    _hugobin="$HOME/gocode/bin/hugo"
    _rsyncbin="/usr/local/bin/rsync"
    _sshlogin="pvad@j-pvad.jp"
    _srvtargetdir="/home/pvad/webapps/jpvad_jp_dev"
    _workingdir="/Users/rcogley/dev/abmd-j-pvad"
    # Trailing Slash Required
    _tmpdir="/tmp/dev.j-pvad.jp/"
    cd ${_workingdir}
    rm -rf ${_tmpdir}
    chmod -R 775 ${_workingdir}/static/
    ${_hugobin} --config="${_workingdir}/config.toml" -s ${_workingdir} -d ${_tmpdir} --baseURL="http://dev.j-pvad.jp"
    ${_rsyncbin} -avz --delete --iconv=UTF-8-MAC,UTF-8 --exclude '.well-known' ${_tmpdir} ${_sshlogin}:${_srvtargetdir}
}

function hugogetjson-jvad {
    rm -rf /Users/rcogley/dev/j-vad/data/seminars.json
    curl -k "https://pro.dbflex.net/secure/api/v2/55317/7E69ADDF820E45ECB88DBE77AE69649B/Seminar/List%20All%20for%20JSON/select.json" | /usr/local/bin/jq '.' > /Users/rcogley/dev/j-vad/data/seminars.json
}

function hugogetjson-esolia {
    rm -rf /Users/rcogley/dev/eSolia_2018/data/success.json
    curl -k "https://pro.dbflex.net/secure/api/v2/15331/25ABDEE3357D416283C0D66B9C872076/Web%20Project/List%20All%20for%20JSON/select.json" | /usr/local/bin/jq '.' > /Users/rcogley/dev/eSolia_2018/data/success.json
}

function hugodeploy-jvad {
    _hugobin="$HOME/gocode/bin/hugo"
    _rsyncbin="/usr/local/bin/rsync"
    _sshlogin="jvad@j-vad.jp"
    _srvtargetdir="/home/jvad/webapps/jvad_jp"
    _workingdir="/Users/rcogley/dev/j-vad"
    # Trailing Slash Required
    _tmpdir="/tmp/dev1.j-vad.jp/"
    cd ${_workingdir}
    rm -rf ${_tmpdir}
    chmod -R 775 ${_workingdir}/static/
    ${_hugobin} --config="${_workingdir}/config.toml" -s ${_workingdir} -d ${_tmpdir}
    ${_rsyncbin} -avz --delete --iconv=UTF-8-MAC,UTF-8 --exclude '.well-known' ${_tmpdir} ${_sshlogin}:${_srvtargetdir}
}

# function to run hugo server

function hugoserver-esolia {
    cd /Users/rcogley/dev/eSolia_2018
    hugo server --navigateToChanged --buildDrafts --watch --verbose --source="/Users/rcogley/dev/eSolia_2018" --config="/Users/rcogley/dev/eSolia_2018/config.toml" --port=1366
}

function hugoserver-esoliacom {
    cd /Users/rcogley/dev/eSolia
    hugo server --navigateToChanged --buildDrafts --watch --verbose --source="/Users/rcogley/dev/eSolia" --config="/Users/rcogley/dev/eSolia/config_en.toml" --port=1377
}

function hugoserver-stable-esoliacom {
    cd /Users/rcogley/dev/eSolia
    /usr/local/Cellar/hugo/0.14/bin/hugo server --buildDrafts --watch --verbose --source="/Users/rcogley/dev/eSolia" --config="/Users/rcogley/dev/eSolia/config_en.toml" --port=1377
}

function hugoserver-esoliacojp {
    cd /Users/rcogley/dev/eSolia
    hugo server --navigateToChanged --buildDrafts --watch --verbose --source="/Users/rcogley/dev/eSolia" --config="/Users/rcogley/dev/eSolia/config_ja.toml" --port=1399
}

function hugoserver-stable-esoliacojp {
    cd /Users/rcogley/dev/eSolia
    /usr/local/Cellar/hugo/0.14/bin/hugo server --buildDrafts --watch --verbose --source="/Users/rcogley/dev/eSolia" --config="/Users/rcogley/dev/eSolia/config_ja.toml" --port=1399
}

function hugoserver-esoliapro {
    cd /Users/rcogley/dev/eSolia.pro
    hugo server --navigateToChanged --buildDrafts --watch --verbose --source="/Users/rcogley/dev/eSolia.pro" --config="/Users/rcogley/dev/eSolia.pro/config.toml" --port=1388
}

function hugoserver-rcc {
    cd /Users/rcogley/dev/RCC-Hugo2015
    hugo server --navigateToChanged --buildDrafts --watch --verbose --source="/Users/rcogley/dev/RCC-Hugo2015" --config="/Users/rcogley/dev/RCC-Hugo2015/config.toml" --port=1313
}

function hugoserver-rcclive {
    cd /Users/rcogley/dev/RCC-live
    hugo server --navigateToChanged --buildDrafts --watch --verbose --source="/Users/rcogley/dev/RCC-live" --config="/Users/rcogley/dev/RCC-live/config.toml" --port=1314 --enableGitInfo
}

function hugoserver-jvad {
    cd /Users/rcogley/dev/j-vad
    hugo server --navigateToChanged --buildDrafts --watch --verbose --source="/Users/rcogley/dev/j-vad" --config="/Users/rcogley/dev/j-vad/config.toml" --port=1315 --enableGitInfo
}

function hugoserver-jpvad {
    cd /Users/rcogley/dev/abmd-j-pvad
    hugo server --navigateToChanged --buildDrafts --watch --verbose --source="/Users/rcogley/dev/abmd-j-pvad" --config="/Users/rcogley/dev/abmd-j-pvad/config.toml" --port=1316 --enableGitInfo
}

# Function for creating posts

function hugogenpost-live {
if [[ -z $1 ]]; then
    echo "A double-quoted post title is required"
    exit 1
fi

_hugobin="$HOME/gocode/bin/hugo"
_workingdir="$HOME/dev/RCC-Live"
_contentdir="${_workingdir}/content/post"
_hytitle=$(echo $1 | tr ' ' '-')
_hytitlelower=$(echo ${_hytitle} | tr "[:upper:]" "[:lower:]")
_hytitlelowerquoted=$(echo \"$_hytitlelower\")
_date=$(date +'%Y-%m-%d')
_datetime=$(date +'%Y-%m-%d %H:%M:%S')
_contentfile="${_date}-${_hytitle}.md"

cd ${_workingdir}
${_hugobin} new post/${_hytitle}.md
mv ${_contentdir}/${_hytitle}.md ${_contentdir}/${_contentfile}
# sed -i 's/slug = ""/slug = '"${_hytitlelowerquoted}"'/g' ${_contentdir}/${_contentfile}
# echo ${_hytitlelowerquoted} >> ${_contentdir}/${_contentfile}
$EDITOR ${_contentdir}/${_contentfile}
}

# Set date in markdown file

function crapsetdate {
  sed -i "/^date/d" $1;
  sed -i "3idate = \"$(date +%Y-%m-%dT%H:%M:%S%:z)\"" $1;
}

function setdate() {
  file=$1
  now=$(date "+%Y-%m-%dT%H:%M:%S%z" | sed -e 's/00$/:00/')
  if [ -f $file ]; then
      mv $file $file-
      # sed -e 's/^date *= *"20.*"$/date = "'$now'"/' -e 's/^draft *= *true//' < $file- > $file
      sed -e 's/^date *= *"20.*"$/date = "'$now'"/' < $file- > $file
  else
      echo "$file not found"
      exit 1
  fi
  exit 0
}

function date3339() {
   echo "Putting RFC3339 on Clipboard for Frontmatter"
   gdate --rfc-3339=seconds | sed 's/ /T/' | pbcopy >&1
   echo "Ok go ahead"
}

# Function for Hugo bundle conversion thanks to @onedrawingperday

function hugo-all-md2bundle {
for FILE in *.md
do
  # remove the last dot and subsequent chars to name the folder from the .md
  DIR="${FILE%.*}"
  mkdir -p "$DIR"
  mv "$FILE" "$DIR"
done
find ./ -iname '*.md' -execdir mv -i '{}' index.md \;
}

function hugo-md2bundle {
for FILE in $1
do
  # remove the last dot and subsequent chars to name the folder from the .md
  DIR="${FILE%.*}"
  mkdir -p "$DIR"
  mv "$FILE" "$DIR"
done
find ./ -iname '*.md' -execdir mv -i '{}' index.md \;
}

# Function for pinging after posting

function ping-rcclive {
echo "Hitting ping-o-matic"
curl -A "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Safari/604.1.38" "https://pingomatic.com/ping/?title=Rick+Cogley+Live&blogurl=http%3A%2F%2Flive.cogley.info&rssurl=http%3A%2F%2Flive.cogley.info%2Findex.xml&chk_weblogscom=on&chk_blogs=on&chk_feedburner=on&chk_newsgator=on&chk_myyahoo=on&chk_pubsubcom=on&chk_blogdigger=on&chk_weblogalot=on&chk_newsisfree=on&chk_topicexchange=on&chk_google=on&chk_tailrank=on&chk_skygrid=on&chk_collecta=on&chk_superfeedr=on"
echo "Hitting google sitemap submit"
curl "http://www.google.com/webmasters/tools/ping?sitemap=http%3A%2F%2Flive.cogley.info%2Fsitemap.xml"
echo "Hitting bing sitemap submit"
curl "http://www.bing.com/webmaster/ping.aspx?siteMap=http%3A%2F%2Flive.cogley.info%2Fsitemap.xml"
}

function ping-rccmain {
echo "Hitting ping-o-matic"
curl -A "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Safari/604.1.38" "https://pingomatic.com/ping/?title=Rick+Cogley+Central&blogurl=https%3A%2F%2Frick.cogley.info&rssurl=https%3A%2F%2Frick.cogley.info%2Findex.xml&chk_weblogscom=on&chk_blogs=on&chk_feedburner=on&chk_newsgator=on&chk_myyahoo=on&chk_pubsubcom=on&chk_blogdigger=on&chk_weblogalot=on&chk_newsisfree=on&chk_topicexchange=on&chk_google=on&chk_tailrank=on&chk_skygrid=on&chk_collecta=on&chk_superfeedr=on"
echo "Hitting google sitemap submit"
curl "http://www.google.com/webmasters/tools/ping?sitemap=https%3A%2F%2Frick.cogley.info%2Fsitemap.xml"
echo "Hitting bing sitemap submit"
curl "http://www.bing.com/webmaster/ping.aspx?siteMap=https%3A%2F%2Frick.cogley.info%2Fsitemap.xml"
}

function ping-jvad {
echo "Hitting ping-o-matic"
curl -A "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Safari/604.1.38" "http://pingomatic.com/ping/?title=補助人工心臓治療関連学会協議会（VAD協議会）&blogurl=http%3A%2F%2Fj-vad.jp&rssurl=http%3A%2F%2Fj-vad.jp%2Findex.xml&chk_weblogscom=on&chk_blogs=on&chk_feedburner=on&chk_newsgator=on&chk_myyahoo=on&chk_pubsubcom=on&chk_blogdigger=on&chk_weblogalot=on&chk_newsisfree=on&chk_topicexchange=on&chk_google=on&chk_tailrank=on&chk_skygrid=on&chk_collecta=on&chk_superfeedr=on"
echo "Hitting google sitemap submit"
curl "http://www.google.com/webmasters/tools/ping?sitemap=https%3A%2F%2Fj-vad.jp%2Fsitemap.xml"
echo "Hitting bing sitemap submit"
curl "http://www.bing.com/webmaster/ping.aspx?siteMap=https%3A%2F%2Fj-vad.jp%2Fsitemap.xml"
}

function ping-jpvad {
echo "Hitting ping-o-matic"
curl -A "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Safari/604.1.38" "http://pingomatic.com/ping/?title=補助人工心臓治療関連学会協議会 インペラ部会 &blogurl=http%3A%2F%2Fj-pvad.jp&rssurl=http%3A%2F%2Fj-pvad.jp%2Findex.xml&chk_weblogscom=on&chk_blogs=on&chk_feedburner=on&chk_newsgator=on&chk_myyahoo=on&chk_pubsubcom=on&chk_blogdigger=on&chk_weblogalot=on&chk_newsisfree=on&chk_topicexchange=on&chk_google=on&chk_tailrank=on&chk_skygrid=on&chk_collecta=on&chk_superfeedr=on"
echo "Hitting google sitemap submit"
curl "http://www.google.com/webmasters/tools/ping?sitemap=https%3A%2F%2Fj-pvad.jp%2Fsitemap.xml"
echo "Hitting bing sitemap submit"
curl "http://www.bing.com/webmaster/ping.aspx?siteMap=https%3A%2F%2Fj-pvad.jp%2Fsitemap.xml"
}

# function to output hugo config

function hugoconfig-esoliacom {
	cd /Users/rcogley/dev/eSolia
	hugo config --config="/Users/rcogley/dev/eSolia/config_en.toml" > /Users/rcogley/dev/eSolia/config_en.txt
}

function hugoconfig-esoliacojp {
	cd /Users/rcogley/dev/eSolia
	hugo config --config="/Users/rcogley/dev/eSolia/config_ja.toml" > /Users/rcogley/dev/eSolia/config_ja.txt
}

function hugoconfig-rcc {
	cd /Users/rcogley/dev/RCC-Hugo2015
	hugo config --config="/Users/rcogley/dev/RCC-Hugo2015/config.toml" > /Users/rcogley/dev/RCC-Hugo2015/config.txt
}

function hugowatchesolias {
    chrome http://localhost:1399
    chrome http://localhost:1377
}

# FileSearch
function f() { find . -iname "*$1*" ${@:2} }
function r() { grep "$1" ${@:2} -R . }

# mkdir and cd (not needed as it is built in as take)
#function mkcd() { mkdir -p "$@" && cd "$_"; }

# put pgp on clipboard

function pgp2clipboard {
  gpg --armor --export 3346F03F | pbcopy
}

### TaskWarrior ###
# Alias for quick add to inbox

alias in='task add +in'

# Tickle task into inbox

tickle () {
    deadline=$1
    shift
    in +tickle wait:$deadline $@
}

# tw research and dev alias

alias rnd='task add +rnd +next +computer +online'

# tw read and review some URL

webpage_title (){
    wget -qO- "$*" | hxselect -s '\n' -c  'title' 2>/dev/null
}

read_and_review (){
    link="$1"
    title=$(webpage_title $link)
    echo $title
    descr="\"Read and review: $title\""
    id=$(task add +next +rnr "$descr" | sed -n 's/Created task \(.*\)./\1/p')
    task "$id" annotate "$link"
}

alias rnr=read_and_review

# tw context

alias tc="task context"
alias tt="task rc.context=none"
alias twork="task rc.context=work"
alias thome="task rc.context=home"
alias tgoto="task rc.context=goto"

# tw status one-liner (note that export -f does not work with zsh)

tw_get_status_line () {
    echo "TW Done:$(task count end.after:today) Due:$(task count +DUE) Overdue:$(task count +OVERDUE) Next:$(task count +next)"
}

alias tws=tw_get_status_line

tw_task_push_pull () {
    task $1 modify due:due$2 scheduled:scheduled$2 wait:wait$2
}

alias tpp=tw_task_push_pull

# tw find tasks with due before wait
#
tw_find_due_before_wait () {
    task due.before:wait all
}

alias tdb4w=tw_find_due_before_wait

# BROWSER
open_by_browser(){ open -a $1 $2}
alias firefox='open_by_browser firefox'
alias chrome='open_by_browser "Google Chrome"'
alias esolia='chrome http://www.esolia.com'
alias lsregister='/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister'

# golang fuzzy finder
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Upgrade brew HEAD apps
brew_reinstall_head_apps (){
    brew reinstall --HEAD neovim
    brew reinstall --HEAD fzf
    brew reinstall --HEAD tmux
}
alias brrehead=brew_reinstall_head_apps
alias brewhaha='echo "Updating brew various...";brew update && brew upgrade; brew cleanup; brew cask cleanup; brew doctor'

# Upgrade nvim plugs

vimplugup (){
    echo "Updating dein plugins..."
    nvim -c ':silent call dein#update()' -c quitall
}

# Upgrade pip and easy_install
pipup (){
    echo "Updating pip setuptools and neovim..."
    pip install --upgrade pip setuptools wheel
    pip install --upgrade neovim
    echo "Updating pip3 setuptools and neovim..."
    pip3 install --upgrade pip setuptools wheel
    pip3 install --upgrade neovim
}

allup (){
    pipup
    vimplugup
    brewhaha
}

# zsh (prezto voodoo is that you need to put these here in zshrc at the bottom)
export HISTSIZE="1000000"
export SAVEHIST="1000000"
export HISTFILE=$HOME/.zsh_history

# make notes

note (){
     nvim "$HOME/Dropbox/Notes/$1 - $(date +"%Y%m%d").md"
}

# check PROdb backup
#

confirmprodbbackup (){
    echo Confirming local PROdb backup ...
    ls -la ~/Google\ Drive/\!Backups/PROdb/15331-eSolia-DB-$(date +'%Y')/
    echo Confirming webfaction PROdb backup ...
    ssh rcogley@cogley.info ls -la /home/rcogley/webapps/es_dbflexbackup01/15331-eSolia-DB-$(date +'%Y')
}

# flush dns
#
alias flushdns='sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder; say dns can sod off'

# update hugo

hugodevinstall (){
  echo "==Do setup=="
  _wherewasi=$(pwd)
  _package="github.com/gohugoio/hugo"
  _builddate=$(date +%FT%T%z)
  export CGO_ENABLED=0
  export GO_EXTLINK_ENABLED=0

  # echo "==Install govendor if it isn't=="
  # if ! hash govendor 2>/dev/null
  # then
  #  go get -u -v github.com/kardianos/govendor
  # fi

  echo "==Install hugo if it isn't=="
  if [[ ! -d "${GOPATH}/src/${_package}" ]] || ( ! hash hugo 2>/dev/null )
  then
    go get -u -v ${_package}
  fi

  echo "==Move current hugo to hugo-prev in case of need to revert=="
  mv ${GOPATH}/bin/hugo ${GOPATH}/bin/hugo-prev

  echo "==Update to hugo master branch=="
  cd ${GOPATH}/src/${_package} || exit
  git fetch --all # fetch new branch names if any
  git checkout master
  # Force update the vendor file in case it got changed
  git reset --hard origin/master

  # echo "==Sync dependent packages per the updated vendor file=="
  # govendor sync

  # echo "==Update goorgeous package to master for orgmode=="
  # govendor fetch github.com/chaseadamsio/goorgeous

  echo "==Build latest hugo=="
  _commithash=$(git rev-parse --short HEAD 2>/dev/null)
  go install -v \
   -ldflags "-X ${_package}/hugolib.CommitHash=${_commithash} \
             -X ${_package}/hugolib.BuildDate=${_builddate}" \
   ${_package}

  echo "==Prep hugo with version string=="
  cd ${GOPATH}/bin
  _newhugoverstr=$($GOPATH/bin/hugo version | awk -F ' ' '{ print $5 }')
  mv $GOPATH/bin/hugo $GOPATH/bin/hugo-${_newhugoverstr}
  ln -sf $GOPATH/bin/hugo-${_newhugoverstr} hugo

  cd $HOME
  echo "==Sanity check - compare versions from home folder =="
  echo "Expecting: ${_newhugoverstr}"
  echo "Actual: "
  hugo version
  echo "Previous: "
  hugo-prev version

  cd "${_wherewasi}" || exit
}

# Use latest brew sqlite not the one from Apple:
export PATH="/usr/local/opt/sqlite/bin:$PATH"
