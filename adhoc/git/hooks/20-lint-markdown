#!/bin/sh
# Markdown linting hook - checks markdown quality and consistency

. .githooks/lib/common.sh

echo "    🔍 Linting Markdown..."

# Get list of staged files to limit linting scope
staged_files=$(git diff --cached --name-only)
if [ -z "$staged_files" ]; then
    log_info "No staged files to lint"
    exit 0
fi

# Filter for markdown files only
md_files=$(echo "$staged_files" | grep '\.md$' || true)
if [ -z "$md_files" ]; then
    log_info "No markdown files in staging area"
    exit 0
fi

log_info "Staged markdown files: $(echo $md_files | tr '\n' ' ')"

if command -v markdownlint-cli2 >/dev/null 2>&1; then
    # Auto-fix simple markdown issues for staged files only
    log_info "Auto-fixing markdown issues..."
    if echo "$md_files" | xargs markdownlint-cli2 --fix; then
        # Check if any staged files were modified by the fixes
        files_changed=false
        for file in $md_files; do
            if [ -f "$file" ] && ! git diff --quiet -- "$file" 2>/dev/null; then
                files_changed=true
                break
            fi
        done
        
        if [ "$files_changed" = true ]; then
            log_success "Markdown issues auto-fixed"
            stage_changes "$md_files"
        fi
        
        # Now run final linting check on all markdown files (for project consistency)
        if markdownlint-cli2 "**/*.md"; then
            log_success "Markdown linting passed"
        else
            log_error "Markdown linting failed - manual fixes needed"
            exit 1
        fi
    else
        log_error "Markdown auto-fix failed"
        exit 1
    fi
else
    log_warn "markdownlint-cli2 not found - install with: npm install -g markdownlint-cli2"
    log_info "Skipping markdown linting"
fi

exit 0